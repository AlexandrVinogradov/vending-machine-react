{"version":3,"sources":["componets/ProductList/ProductList.module.scss","componets/ResultForm/ResultForm.module.scss","componets/InsertBanknoteForm/InsertBanknoteForm.module.scss","componets/ChooseProductForm/ChooseProductForm.module.scss","componets/ProductList/ProductList.jsx","componets/InsertBanknoteForm/InsertBanknoteForm.jsx","componets/ChooseProductForm/ChooseProductForm.jsx","componets/ResultForm/ResultForm.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","NewProductElement","props","className","s","productList__item","product","product__name","name","product__desc","desc","product__info","product__info_price","price","product__info_name","id","ProductList","newProductElement","products","map","p","key","interface__goods","inteface__goods_area","productList","InsertBanknoteForm","state","legalPayload","balanceInputValue","isRichest","errorMessageUnknowBanknote","isError","handleBalanceEnterClick","e","preventDefault","includes","parseInt","balance","setState","every","setValuesOfInsertBanknoteForm","currentTarget","value","dialogBoard","this","onSubmit","form","form__desc","ref","balanceInputValueRef","onInput","disabled","selectedProduct","React","Component","ChooseProductForm","errorMessageIncorrect","coins","change","productInputValue","mycoins","handleProductEnterClick","some","find","setValuesOfChooseProductForm","newChange","localCoins","bills","i","z","Math","floor","push","productInputValueRef","CoinChange","coins10","coins5","coins2","coins1","ResultForm","coinChange","c","index","conclusion","result","onClick","takeProduct","foundSelectedProduct","App","current","createRef","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"0GACAA,EAAOC,QAAU,CAAC,kBAAoB,uCAAuC,iBAAmB,sCAAsC,qBAAuB,0CAA0C,YAAc,iCAAiC,QAAU,6BAA6B,cAAgB,mCAAmC,cAAgB,qC,qBCAhWD,EAAOC,QAAU,CAAC,YAAc,gCAAgC,WAAa,+BAA+B,QAAU,4BAA4B,OAAS,6B,gBCA3JD,EAAOC,QAAU,CAAC,YAAc,wCAAwC,WAAa,uCAAuC,KAAO,mC,gBCAnID,EAAOC,QAAU,CAAC,YAAc,uCAAuC,KAAO,kC,wNCExEC,EAAoB,SAAAC,GACxB,OACE,oCACE,wBAAIC,UAAWC,IAAEC,mBACf,yBAAKF,UAAWC,IAAEE,SAEhB,0BAAMH,UAAWC,IAAEG,eAAgBL,EAAMM,MACzC,0BAAML,UAAWC,IAAEK,eAAgBP,EAAMQ,MACzC,yBAAKP,UAAWC,IAAEO,eAChB,0BAAMR,UAAWC,IAAEQ,qBAAsBV,EAAMW,MAAQ,MACvD,0BAAMV,UAAWC,IAAEU,oBAAqBZ,EAAMa,SAoB3CC,EAbK,SAAAd,GAClB,IAAMe,EAAoBf,EAAMgB,SAASC,KAAI,SAAAC,GAAC,OAC5C,kBAAC,EAAD,CAAmBL,GAAIK,EAAEL,GAAIM,IAAKD,EAAEL,GAAIP,KAAMY,EAAEZ,KAAMK,MAAOO,EAAEP,MAAOH,KAAMU,EAAEV,UAGhF,OACE,yBAAKP,UAAWC,IAAEkB,kBAChB,yBAAKnB,UAAWC,IAAEmB,sBAChB,wBAAIpB,UAAWC,IAAEoB,aAAcP,M,gBC6CxBQ,E,2MArEbC,MAAQ,CACNC,aAAc,CAAC,GAAI,IAAK,IAAK,IAAK,KAClCC,kBAAmB,EACnBC,WAAW,EACXC,2BAA4B,GAC5BC,SAAS,G,EAGXC,wBAA0B,SAAAC,GAExB,GADAA,EAAEC,iBACE,EAAKR,MAAMC,aAAaQ,SAASC,SAAS,EAAKV,MAAME,oBAAqB,CAC5E,IAAIS,EAAUD,SAAS,EAAKV,MAAME,mBAAqBQ,SAAS,EAAKlC,MAAMmC,SAE3E,EAAKC,SACH,CACET,UAAW,EAAK3B,MAAMgB,SAASqB,OAC7B,SAAAnB,GAAC,OAAIA,EAAEP,OAASuB,SAAS,EAAKlC,MAAMmC,SAAWD,SAAS,EAAKV,MAAME,sBAErEE,2BAA4B,KAE9B,WACE,EAAK5B,MAAMsC,8BAA8BH,EAAS,EAAKX,MAAMG,mBAIjE,EAAKS,SAAS,CACZP,SAAS,EACTD,2BAA4B,qB,EAIlCF,kBAAoB,SAAAK,GAClB,EAAKK,SAAS,CACZV,kBAAmBQ,SAASH,EAAEQ,cAAcC,U,wEAK9C,IAAIC,EAYJ,OATEA,EADEC,KAAKlB,MAAMI,2BACCc,KAAKlB,MAAMI,2BACO,IAAvBc,KAAK1C,MAAMmC,QACN,sBACLO,KAAKlB,MAAMG,UACT,0BAAsBe,KAAK1C,MAAMmC,QAAU,4BAE3C,0BAAsBO,KAAK1C,MAAMmC,QAAU,MAItD,0BAAMQ,SAAUD,KAAKZ,wBAAyB7B,UAAWC,IAAE0C,MACzD,yBAAK3C,UAAWC,IAAEuC,aAChB,8BAAOA,IAGT,uBAAGxC,UAAWC,IAAE2C,YAAhB,yGAIA,2BACEC,IAAKJ,KAAK1C,MAAM+C,qBAChBC,QAASN,KAAKhB,kBACduB,SAAUP,KAAK1C,MAAM2B,WAAae,KAAK1C,MAAMkD,uB,GAhEtBC,IAAMC,W,wBCsGxBC,E,2MArGb7B,MAAQ,CACN0B,gBAAiB,EACjBI,sBAAuB,GACvBC,MAAO,GACPC,OAAQ,EACR3B,SAAS,EACT4B,kBAAmB,EACnBC,QAAS,I,EAGXC,wBAA0B,SAAA5B,GACxBA,EAAEC,iBAGA,EAAKhC,MAAMgB,SAAS4C,MAAK,SAAA1C,GAAC,OAAIA,EAAEL,KAAO,EAAKW,MAAMiC,sBAClD,EAAKzD,MAAMmC,SAAW,EAAKnC,MAAMgB,SAAS6C,MAAK,SAAA3C,GAAC,OAAIA,EAAEL,KAAO,EAAKW,MAAMiC,qBAAmB9C,MAE3F,EAAKyB,SACH,CACEc,gBAAiBhB,SAAS,EAAKV,MAAMiC,mBACrCH,sBAAuB,GACvBC,MAAO,EAAK/B,MAAMkC,QAClBF,OACEtB,SAAS,EAAKlC,MAAMmC,SAAW,EAAKnC,MAAMgB,SAAS6C,MAAK,SAAA3C,GAAC,OAAIA,EAAEL,KAAO,EAAKW,MAAMiC,qBAAmB9C,MACtGkB,SAAS,EACT4B,kBAAmB,IAErB,WACE,EAAKzD,MAAM8D,6BAA6B,EAAKtC,MAAM0B,gBAAiB,EAAK1B,MAAM+B,MAAO,EAAK/B,MAAMgC,WAIrG,EAAKxD,MAAMgB,SAAS4C,MAAK,SAAA1C,GAAC,OAAIA,EAAEL,KAAO,EAAKW,MAAMiC,sBAClD,EAAKzD,MAAMmC,QAAU,EAAKnC,MAAMgB,SAAS6C,MAAK,SAAA3C,GAAC,OAAIA,EAAEL,KAAO,EAAKW,MAAMiC,qBAAmB9C,MAE1F,EAAKyB,SAAS,CACZP,SAAS,EACTyB,sBAAuB,sBAGzB,EAAKlB,SAAS,CACZP,SAAS,EACTyB,sBAAuB,0B,EAI7BG,kBAAoB,SAAA1B,GAClB,EAAKK,SACH,CACEqB,kBAAmBvB,SAASH,EAAEQ,cAAcC,SAE9C,WACE,GAAI,EAAKxC,MAAMgB,SAAS4C,MAAK,SAAA1C,GAAC,OAAIA,EAAEL,KAAO,EAAKW,MAAMiC,qBAAoB,CAQxE,IAPA,IAAIM,EACF7B,SAAS,EAAKlC,MAAMmC,SAAW,EAAKnC,MAAMgB,SAAS6C,MAAK,SAAA3C,GAAC,OAAIA,EAAEL,KAAO,EAAKW,MAAMiC,qBAAmB9C,MAElGqD,EAAa,GACbC,EAAQ,CAAC,GAAI,EAAG,EAAG,GACnB/C,EAAI,EACJgD,EAAI,EACDhD,EAAI6C,GAAW,CACpB,IAAII,EAAIC,KAAKC,OAAON,EAAY7C,GAAK+C,EAAMC,IAC3CF,EAAWM,KAAX,eAAmBL,EAAMC,GAAKC,IAC9BjD,GAAK+C,EAAMC,GAAKC,EAChBD,IAEF,EAAK9B,SAAS,CAAEsB,QAASM,S,wEAO/B,IAAIvB,EAcJ,OAXEA,EADEC,KAAK1C,MAAMsD,sBACCZ,KAAK1C,MAAMsD,sBACO,IAAvBZ,KAAK1C,MAAMmC,QACN,IACLO,KAAKlB,MAAMK,QACNa,KAAKlB,MAAM8B,sBAChBZ,KAAK1C,MAAMkD,gBACN,UAEA,iBAId,0BAAMP,SAAUD,KAAKiB,wBAAyB1D,UAAWC,IAAE0C,MACzD,yBAAK3C,UAAWC,IAAEuC,aAChB,8BAAOA,IAET,2BACEO,QAASN,KAAKe,kBACdX,IAAKJ,KAAK1C,MAAMuE,qBAChBtB,SAAUP,KAAK1C,MAAMkD,iBAA0C,IAAvBR,KAAK1C,MAAMmC,e,GAhG7BgB,IAAMC,W,gBCAhCoB,EAAa,SAAAxE,GACjB,OACE,oCACGA,EAAMyE,QAAU,sCAAYzE,EAAMyE,QAAlB,UAAyC,KACzDzE,EAAM0E,OAAS,qCAAW1E,EAAM0E,OAAjB,UAAuC,KACtD1E,EAAM2E,OAAS,qCAAW3E,EAAM2E,OAAjB,UAAuC,KACtD3E,EAAM4E,OAAS,qCAAW5E,EAAM4E,OAAjB,UAAuC,OA6B9CC,EAzBI,SAAA7E,GACjB,IAAM8E,EAAa9E,EAAMuD,MAAMtC,KAAI,SAAA8D,GAAC,OAClC,kBAAC,EAAD,CAAY5D,IAAK4D,EAAEC,MAAOP,QAASM,EAAE,IAAKL,OAAQK,EAAE,GAAIJ,OAAQI,EAAE,GAAIH,OAAQG,EAAE,QAGlF,OACE,6BACE,yBAAK9E,UAAWC,IAAEuC,aAChB,8BAAOzC,EAAMkD,gBAAkB,+BAAiC,MAElE,yBAAKjD,UAAWC,IAAE+E,YAChB,yBAAKhF,UAAWC,IAAEE,SACf0E,GACC9E,EAAMwD,QAAUxD,EAAMkD,gBAAkB,0CAAuB,MAEnE,yBAAKjD,UAAS,UAAKC,IAAEE,QAAP,YAAkBF,IAAEgF,QAAUC,QAASnF,EAAMoF,aACzD,8BAAOpF,EAAMkD,gBAAkBlD,EAAMqF,qBAAqB/E,KAAO,MACjE,8BAAON,EAAMkD,gBAAkBlD,EAAMqF,qBAAqB7E,KAAO,MACjE,8BAAOR,EAAMkD,gBAAkBlD,EAAMqF,qBAAqB1E,MAAQ,MAClE,8BAAOX,EAAMkD,gBAAkBlD,EAAMqF,qBAAqBxE,GAAK,UCuD1DyE,E,YA/Db,WAAYtF,GAAQ,IAAD,8BACjB,4CAAMA,KAjBRwB,MAAQ,CACNR,SAAU,CACR,CAAEV,KAAM,OAAQK,MAAO,GAAIH,KAAM,SAAUK,GAAI,GAC/C,CAAEP,KAAM,QAASK,MAAO,IAAKH,KAAM,YAAaK,GAAI,GACpD,CAAEP,KAAM,MAAOK,MAAO,IAAKH,KAAM,QAASK,GAAI,GAC9C,CAAEP,KAAM,OAAQK,MAAO,GAAIH,KAAM,YAAaK,GAAI,GAClD,CAAEP,KAAM,QAASK,MAAO,IAAKH,KAAM,UAAWK,GAAI,GAClD,CAAEP,KAAM,SAAUK,MAAO,GAAIH,KAAM,gBAAiBK,GAAI,GACxD,CAAEP,KAAM,eAAgBK,MAAO,IAAKH,KAAM,aAAcK,GAAI,IAE9D2C,OAAQ,EACRrB,QAAS,EACTe,gBAAiB,EACjBK,MAAO,GACP5B,UAAW,GAEM,EAMnBW,8BAAgC,SAACH,EAASR,GACxC,EAAKS,SAAS,CAAED,UAASR,eAPR,EAUnBmC,6BAA+B,SAACZ,EAAiBK,EAAOC,GACtD,EAAKpB,SAAS,CAAEc,kBAAiBK,QAAOC,YAXvB,EAcnB4B,YAAc,WACZ,EAAKb,qBAAqBgB,QAAQ/C,MAAQ,GAC1C,EAAKO,qBAAqBwC,QAAQ/C,MAAQ,GAC1C,EAAKJ,SAAS,CACZoB,OAAQ,EACRrB,QAAS,EACTe,gBAAiB,EACjBK,MAAO,GACP5B,UAAW,KApBb,EAAK4C,qBAAuBpB,IAAMqC,YAClC,EAAKzC,qBAAuBI,IAAMqC,YAHjB,E,sEA0BT,IAAD,OACDH,EAAuB3C,KAAKlB,MAAMR,SAAS6C,MAAK,SAAA3C,GAAC,OAAIA,EAAEL,KAAO,EAAKW,MAAM0B,mBAE/E,OACE,yBAAKjD,UAAU,aACb,kBAAC,EAAD,CAAae,SAAU0B,KAAKlB,MAAMR,WAElC,yBAAKf,UAAU,4BACb,kBAAC,EAAD,CACEiD,gBAAiBR,KAAKlB,MAAM0B,gBAC5BH,qBAAsBL,KAAKK,qBAC3B/B,SAAU0B,KAAKlB,MAAMR,SACrBsB,8BAA+BI,KAAKJ,8BACpCH,QAASO,KAAKlB,MAAMW,QACpBR,UAAWe,KAAKlB,MAAMG,YAGxB,kBAAC,EAAD,CACEuB,gBAAiBR,KAAKlB,MAAM0B,gBAC5Bf,QAASO,KAAKlB,MAAMW,QACpBoC,qBAAsB7B,KAAK6B,qBAC3BvD,SAAU0B,KAAKlB,MAAMR,SACrB8C,6BAA8BpB,KAAKoB,+BAGrC,kBAAC,EAAD,CACEZ,gBAAiBR,KAAKlB,MAAM0B,gBAC5BM,OAAQd,KAAKlB,MAAMgC,OACnB4B,YAAa1C,KAAK0C,YAClBC,qBAAsBA,EACtB9B,MAAOb,KAAKlB,MAAM+B,c,GAzEZJ,IAAMC,WCKJqC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.3fbbf3f8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"productList__item\":\"ProductList_productList__item__2TOrG\",\"interface__goods\":\"ProductList_interface__goods__1raIP\",\"inteface__goods_area\":\"ProductList_inteface__goods_area__1CSfj\",\"productList\":\"ProductList_productList__3S7CR\",\"product\":\"ProductList_product__UP-RR\",\"product__desc\":\"ProductList_product__desc__1yAog\",\"product__info\":\"ProductList_product__info__2B2gT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogBoard\":\"ResultForm_dialogBoard__3JABE\",\"conclusion\":\"ResultForm_conclusion__3fctO\",\"product\":\"ResultForm_product__2DJQT\",\"result\":\"ResultForm_result__27VHA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogBoard\":\"InsertBanknoteForm_dialogBoard__2CA0T\",\"form__desc\":\"InsertBanknoteForm_form__desc__31wp9\",\"form\":\"InsertBanknoteForm_form__1eT9X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogBoard\":\"ChooseProductForm_dialogBoard__kxfRD\",\"form\":\"ChooseProductForm_form__11ji9\"};","import React from 'react'\r\nimport s from './ProductList.module.scss'\r\n\r\nconst NewProductElement = props => {\r\n  return (\r\n    <>\r\n      <li className={s.productList__item}>\r\n        <div className={s.product}>\r\n          {/* or doesnt need? */}\r\n          <span className={s.product__name}>{props.name}</span>\r\n          <span className={s.product__desc}>{props.desc}</span>\r\n          <div className={s.product__info}>\r\n            <span className={s.product__info_price}>{props.price + ' R'}</span>\r\n            <span className={s.product__info_name}>{props.id}</span>\r\n          </div>\r\n        </div>\r\n      </li>\r\n    </>\r\n  )\r\n}\r\nconst ProductList = props => {\r\n  const newProductElement = props.products.map(p => (\r\n    <NewProductElement id={p.id} key={p.id} name={p.name} price={p.price} desc={p.desc} />\r\n  ))\r\n\r\n  return (\r\n    <div className={s.interface__goods}>\r\n      <div className={s.inteface__goods_area}>\r\n        <ul className={s.productList}>{newProductElement}</ul>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default ProductList\r\n","import React from 'react'\r\nimport s from './InsertBanknoteForm.module.scss'\r\n\r\nclass InsertBanknoteForm extends React.Component {\r\n  state = {\r\n    legalPayload: [50, 100, 200, 500, 1000],\r\n    balanceInputValue: 0,\r\n    isRichest: false,\r\n    errorMessageUnknowBanknote: '',\r\n    isError: false,\r\n  }\r\n\r\n  handleBalanceEnterClick = e => {\r\n    e.preventDefault()\r\n    if (this.state.legalPayload.includes(parseInt(this.state.balanceInputValue))) {\r\n      let balance = parseInt(this.state.balanceInputValue) + parseInt(this.props.balance)\r\n\r\n      this.setState(\r\n        {\r\n          isRichest: this.props.products.every(\r\n            p => p.price <= parseInt(this.props.balance) + parseInt(this.state.balanceInputValue)\r\n          ),\r\n          errorMessageUnknowBanknote: '',\r\n        },\r\n        () => {\r\n          this.props.setValuesOfInsertBanknoteForm(balance, this.state.isRichest)\r\n        }\r\n      )\r\n    } else {\r\n      this.setState({\r\n        isError: true,\r\n        errorMessageUnknowBanknote: 'Unknow Banknote',\r\n      })\r\n    }\r\n  }\r\n  balanceInputValue = e => {\r\n    this.setState({\r\n      balanceInputValue: parseInt(e.currentTarget.value),\r\n    })\r\n  }\r\n\r\n  render() {\r\n    let dialogBoard\r\n\r\n    if (this.state.errorMessageUnknowBanknote) {\r\n      dialogBoard = this.state.errorMessageUnknowBanknote\r\n    } else if (this.props.balance === 0) {\r\n      dialogBoard = 'Insert banknotes...'\r\n    } else if (this.state.isRichest) {\r\n      dialogBoard = `Inserted money: ${this.props.balance + ' R Enough for any snacks'}`\r\n    } else {\r\n      dialogBoard = `Inserted money: ${this.props.balance + ' R'}`\r\n    }\r\n\r\n    return (\r\n      <form onSubmit={this.handleBalanceEnterClick} className={s.form}>\r\n        <div className={s.dialogBoard}>\r\n          <span>{dialogBoard}</span>\r\n        </div>\r\n\r\n        <p className={s.form__desc}>\r\n          Available banknotes: 50, 100, 200, 500 or 1000 R. The machine gives change in 1, 2, 5 and 10 R coins.\r\n        </p>\r\n\r\n        <input\r\n          ref={this.props.balanceInputValueRef}\r\n          onInput={this.balanceInputValue}\r\n          disabled={this.props.isRichest || this.props.selectedProduct}\r\n        />\r\n      </form>\r\n    )\r\n  }\r\n}\r\nexport default InsertBanknoteForm\r\n","import React from 'react'\r\nimport s from './ChooseProductForm.module.scss'\r\n\r\nclass ChooseProductForm extends React.Component {\r\n  state = {\r\n    selectedProduct: 0,\r\n    errorMessageIncorrect: '',\r\n    coins: [],\r\n    change: 0,\r\n    isError: false,\r\n    productInputValue: 0,\r\n    mycoins: [],\r\n  }\r\n\r\n  handleProductEnterClick = e => {\r\n    e.preventDefault()\r\n\r\n    if (\r\n      this.props.products.some(p => p.id === this.state.productInputValue) &&\r\n      this.props.balance >= this.props.products.find(p => p.id === this.state.productInputValue).price\r\n    ) {\r\n      this.setState(\r\n        {\r\n          selectedProduct: parseInt(this.state.productInputValue),\r\n          errorMessageIncorrect: '',\r\n          coins: this.state.mycoins,\r\n          change:\r\n            parseInt(this.props.balance) - this.props.products.find(p => p.id === this.state.productInputValue).price,\r\n          isError: false,\r\n          productInputValue: 0,\r\n        },\r\n        () => {\r\n          this.props.setValuesOfChooseProductForm(this.state.selectedProduct, this.state.coins, this.state.change)\r\n        }\r\n      )\r\n    } else if (\r\n      this.props.products.some(p => p.id === this.state.productInputValue) &&\r\n      this.props.balance < this.props.products.find(p => p.id === this.state.productInputValue).price\r\n    ) {\r\n      this.setState({\r\n        isError: true,\r\n        errorMessageIncorrect: 'Not enought money',\r\n      })\r\n    } else {\r\n      this.setState({\r\n        isError: true,\r\n        errorMessageIncorrect: 'Enter correct number',\r\n      })\r\n    }\r\n  }\r\n  productInputValue = e => {\r\n    this.setState(\r\n      {\r\n        productInputValue: parseInt(e.currentTarget.value),\r\n      },\r\n      () => {\r\n        if (this.props.products.some(p => p.id === this.state.productInputValue)) {\r\n          let newChange =\r\n            parseInt(this.props.balance) - this.props.products.find(p => p.id === this.state.productInputValue).price\r\n\r\n          let localCoins = []\r\n          let bills = [10, 5, 2, 1]\r\n          let p = 0\r\n          let i = 0\r\n          while (p < newChange) {\r\n            let z = Math.floor((newChange - p) / bills[i])\r\n            localCoins.push({ [bills[i]]: z })\r\n            p += bills[i] * z\r\n            i++\r\n          }\r\n          this.setState({ mycoins: localCoins })\r\n        }\r\n      }\r\n    )\r\n  }\r\n\r\n  render() {\r\n    let dialogBoard\r\n\r\n    if (this.props.errorMessageIncorrect) {\r\n      dialogBoard = this.props.errorMessageIncorrect\r\n    } else if (this.props.balance === 0) {\r\n      dialogBoard = '>'\r\n    } else if (this.state.isError) {\r\n      dialogBoard = this.state.errorMessageIncorrect\r\n    } else if (this.props.selectedProduct) {\r\n      dialogBoard = 'Success'\r\n    } else {\r\n      dialogBoard = 'Choose product'\r\n    }\r\n\r\n    return (\r\n      <form onSubmit={this.handleProductEnterClick} className={s.form}>\r\n        <div className={s.dialogBoard}>\r\n          <span>{dialogBoard}</span>\r\n        </div>\r\n        <input\r\n          onInput={this.productInputValue}\r\n          ref={this.props.productInputValueRef}\r\n          disabled={this.props.selectedProduct || this.props.balance === 0}\r\n        />\r\n      </form>\r\n    )\r\n  }\r\n}\r\nexport default ChooseProductForm\r\n","import React from 'react'\r\nimport s from './ResultForm.module.scss'\r\n\r\nconst CoinChange = props => {\r\n  return (\r\n    <>\r\n      {props.coins10 ? <div>10 R: {props.coins10} coins</div> : null}\r\n      {props.coins5 ? <div>5 R: {props.coins5} coins</div> : null}\r\n      {props.coins2 ? <div>2 R: {props.coins2} coins</div> : null}\r\n      {props.coins1 ? <div>1 R: {props.coins1} coins</div> : null}\r\n    </>\r\n  )\r\n}\r\nconst ResultForm = props => {\r\n  const coinChange = props.coins.map(c => (\r\n    <CoinChange key={c.index} coins10={c[10]} coins5={c[5]} coins2={c[2]} coins1={c[1]} />\r\n  ))\r\n \r\n  return (\r\n    <div>\r\n      <div className={s.dialogBoard}>\r\n        <span>{props.selectedProduct ? 'Take your product and change' : '>'}</span>\r\n      </div>\r\n      <div className={s.conclusion}>\r\n        <div className={s.product}>\r\n          {coinChange}\r\n          {!props.change && props.selectedProduct ? <div>No change</div> : null}\r\n        </div>\r\n        <div className={`${s.product} ${s.result}`} onClick={props.takeProduct}>\r\n          <span>{props.selectedProduct ? props.foundSelectedProduct.name : null}</span>\r\n          <span>{props.selectedProduct ? props.foundSelectedProduct.desc : null}</span>\r\n          <span>{props.selectedProduct ? props.foundSelectedProduct.price : null}</span>\r\n          <span>{props.selectedProduct ? props.foundSelectedProduct.id : null}</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default ResultForm\r\n","import React from 'react'\r\nimport './App.scss'\r\nimport ProductList from './componets/ProductList/ProductList'\r\nimport InsertBanknoteForm from './componets/InsertBanknoteForm/InsertBanknoteForm'\r\nimport ChooseProductForm from './componets/ChooseProductForm/ChooseProductForm'\r\nimport ResultForm from './componets/ResultForm/ResultForm'\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    products: [\r\n      { name: 'Oreo', price: 80, desc: 'Cookie', id: 1 },\r\n      { name: 'Milka', price: 140, desc: 'Chocolate', id: 2 },\r\n      { name: 'M&M', price: 200, desc: 'Candy', id: 3 },\r\n      { name: 'Twix', price: 91, desc: 'Choco bar', id: 4 },\r\n      { name: 'Durex', price: 650, desc: 'Condoms', id: 5 },\r\n      { name: 'Mentos', price: 50, desc: 'Chewing pills', id: 6 },\r\n      { name: 'Mountain dew', price: 170, desc: 'Cold drink', id: 7 },\r\n    ],\r\n    change: 0,\r\n    balance: 0,\r\n    selectedProduct: 0,\r\n    coins: [],\r\n    isRichest: 0,\r\n  }\r\n  constructor(props) {\r\n    super(props)\r\n    this.productInputValueRef = React.createRef()\r\n    this.balanceInputValueRef = React.createRef()\r\n  }\r\n  // ========= Insert Banknote Form ================\r\n  setValuesOfInsertBanknoteForm = (balance, isRichest) => {\r\n    this.setState({ balance, isRichest })\r\n  }\r\n  // ========= Choose Product Form =========\r\n  setValuesOfChooseProductForm = (selectedProduct, coins, change) => {\r\n    this.setState({ selectedProduct, coins, change })\r\n  }\r\n  // ========= Result Form =========\r\n  takeProduct = () => {\r\n    this.productInputValueRef.current.value = ''\r\n    this.balanceInputValueRef.current.value = ''\r\n    this.setState({\r\n      change: 0,\r\n      balance: 0,\r\n      selectedProduct: 0,\r\n      coins: [],\r\n      isRichest: 0,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const foundSelectedProduct = this.state.products.find(p => p.id === this.state.selectedProduct)\r\n\r\n    return (\r\n      <div className=\"interface\">\r\n        <ProductList products={this.state.products} />\r\n\r\n        <div className=\"interface__control-panel\">\r\n          <InsertBanknoteForm\r\n            selectedProduct={this.state.selectedProduct}\r\n            balanceInputValueRef={this.balanceInputValueRef}\r\n            products={this.state.products}\r\n            setValuesOfInsertBanknoteForm={this.setValuesOfInsertBanknoteForm}\r\n            balance={this.state.balance}\r\n            isRichest={this.state.isRichest}\r\n          />\r\n\r\n          <ChooseProductForm\r\n            selectedProduct={this.state.selectedProduct}\r\n            balance={this.state.balance}\r\n            productInputValueRef={this.productInputValueRef}\r\n            products={this.state.products}\r\n            setValuesOfChooseProductForm={this.setValuesOfChooseProductForm}\r\n          />\r\n\r\n          <ResultForm\r\n            selectedProduct={this.state.selectedProduct}\r\n            change={this.state.change}\r\n            takeProduct={this.takeProduct}\r\n            foundSelectedProduct={foundSelectedProduct}\r\n            coins={this.state.coins}\r\n          />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default App\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}